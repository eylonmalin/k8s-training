apiVersion: v1
kind: Secret
metadata:
  name: lc-db
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lc-db
  labels:
    app: lc-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lc-db
  template:
    metadata:
      labels:
        app: lc-db
    spec:
      containers:
      - name: lc-db
        image: mongo:4.2
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: lc-db
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lc-db
              key: password

---
apiVersion: v1
kind: Service
metadata:
  name: lc-db
spec:
  selector:
    app: lc-db
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lc-app
  labels:
    app: lc-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lc-app
  template:
    metadata:
      labels:
        app: lc-app
    spec:
      containers:
      - name: lc-app
        image: eylonmalin/lets-chat-app:v1
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 1
        env:
        - name: MONGO_HOST
          value: lc-db
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: lc-db
              key: username
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: lc-db
              key: password

---
apiVersion: v1
kind: Service
metadata:
  name: lc-app
spec:
  selector:
    app: lc-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: lc-config
data:
  code.enabled: "false"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lc-web # The name of your deployment
  labels:
    app: lc-web  # The label of your deployment
spec:
  replicas: 3 # Number of replicated pods
  selector:
    matchLabels:
      app: lc-web # defines how the Deployment finds which Pods to manage. Should match labels defined in the Pod template
  template:
    metadata:
      labels:
        app: lc-web # The label of the pod to match selectors
    spec:
      containers:
      - name: lc-web # The container name
        image: eylonmalin/lets-chat-web:v1 # The DockerHub image
        ports:
        - containerPort: 80 # Open pod port 80 for the container
        livenessProbe:
          httpGet:
            path: /media/favicon.ico
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /media/favicon.ico
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 1
        env: # [OPTIONAL] add environments values
        - name: CODE_ENABLED
          valueFrom:
            configMapKeyRef:
              name: lc-config
              key: code.enabled
        - name: APP_HOST
          value: lc-app
        - name: APP_PORT
          value: "8080"

---
apiVersion: v1
kind: Service
metadata:
  name: lc-web
spec:
  selector:
    app: lc-web
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80